MAIN                                                                                                          PAGE 1

                       1    $MOD51                                          ; This includes 8051 definitions for the Met
                                                                               alink assembler
                       2    ; Adapted from http://what-when-how.com/8051-microcontroller/lcd-interfacing/
                       3    
  0080                 4    RS                      EQU     P0.0    ; Register select: selects command register when low
                                                                               , data register when high
  0081                 5    RW                      EQU             P0.1    ; Read/write: low to write to the register, 
                                                                               high to read from the register
  0082                 6    EN                      EQU     P0.2    ; Enable: sends data to data pins when a high to low
                                                                                pulse is given
  00A7                 7    D7                      EQU             P2.7    ; D7: busy flag of LCD, when high means LCD 
                                                                               busy and no info should be issued
  00A0                 8    DATA_PORT       EQU     P2              ; Define input port
                       9    
                      10    
0000                  11    ORG             0H
0000 900050           12    MAIN:           MOV             DPTR,   #INIT_CMND      ; Load DPTR with LCD initialization 
                                                                               command
0003 1129             13                            ACALL   WRT_CMND                        ; Send command to LCD
0005 1147             14                            ACALL   DELAY                           ; Call DELAY subroutine
                      15            
0007 900061           16    SEND_DATA1:     MOV             DPTR,   #LINE1          ; Load DPTR with command to begin cu
                                                                               rsor at line 1
000A 1129             17                            ACALL   WRT_CMND                        ; Send command to LCD
000C 900055           18                            MOV             DPTR,   #MY_DATA1       ; Load DPTR with data for li
                                                                               ne 1
000F 111D             19                            ACALL   D1                                      ; Call D1 subroutine
                                                                               
                      20                            ;SJMP   SEND_DATA2
                      21                            
0011 900063           22    SEND_DATA2:     MOV             DPTR,   #LINE2          ; Load DPTR with command to begin cu
                                                                               rsor at line 2
0014 1129             23                            ACALL   WRT_CMND                        ; Send command to LCD
0016 90005B           24                            MOV             DPTR,   #MY_DATA2       ; Load DPTR with data for li
                                                                               ne 2
0019 111D             25                            ACALL   D1                                      ; Call D1 subroutine
                                                                               
001B 80E3             26                            SJMP    MAIN                            ; Jump back to beginning of 
                                                                               program
                      27                            
                      28    ; D1 subroutine:
001D 751005           29    D1:                     MOV             10H, #5                         ; Load register 10H 
                                                                               with 5
0020 1138             30    D2:                     ACALL   WRT_DATA                        ; Send data to LCD and displ
                                                                               ay
0022 1147             31                            ACALL   DELAY                           ; Call DELAY subroutine
0024 A3               32                            INC             DPTR                            ; Increment DPTR to 
                                                                               get address of next byte of data (charact
                                                                               er)
0025 D510F8           33                            DJNZ    10H, D2                         ; Loop through D1 5 times be
                                                                               cause there are 5 char in 'HELLO' and 'WO
                                                                               RLD'
0028 22               34                            RET
                      35            
                      36    
                      37    
                      38    ; WRT_CMND subroutine: send command to LCD              
0029 E4               39    WRT_CMND:       CLR     A                               ; Reset A at 0
MAIN                                                                                                          PAGE 2

002A 93               40                            MOVC    A,      @A+DPTR         ; Address of the desired byte in cod
                                                                               e space is formed by adding A + DPTR
002B F5A0             41                            MOV     DATA_PORT,      A       ; Load DATA_PORT with contents of A
                                                                               
002D C280             42                            CLR     RS                              ; RS = 0 for command
002F C281             43                            CLR     RW                              ; RW = 0 for write
0031 D282             44                            SETB    EN                              ; EN = 1 for high pulse
0033 1147             45                            ACALL   DELAY                   ; Call DELAY subroutine
0035 C282             46                            CLR     EN                              ; EN = 0 for low pulse
0037 22               47                            RET
                      48    
                      49    ; WRT_DATA subroutine: send data to LCD and display
0038 E4               50    WRT_DATA:       CLR     A                               ; Reset A at 0
0039 93               51                            MOVC    A,      @A+DPTR         ; Address of the desired byte in cod
                                                                               e space is formed by adding A + DPTR
003A F5A0             52                            MOV     DATA_PORT,      A       ; Load DATA_PORT with contents of A
                                                                               
003C D280             53                            SETB    RS                              ; RS = 1 for data
003E C281             54                            CLR     RW                              ; RW = 0 for write
0040 D282             55                            SETB    EN                              ; EN = 1 for high pulse
0042 1147             56                            ACALL   DELAY                   ; Call DELAY subroutine
0044 C282             57                            CLR     EN                              ; EN = 0 for low pulse
0046 22               58                            RET
                      59                    
                      60    ; DELAY subroutine
0047 7BFF             61    DELAY:          MOV     R3,     #255    ; Load R3 with 255
0049 7C02             62    L2:             MOV     R4,             #2              ; Load R4 with 2
004B DCFE             63    L1:             DJNZ    R4,     L1              ; Decrement R4, if not zero repeat L1
004D DBFA             64                            DJNZ    R3,     L2              ; Decrement R3, if not zero repeat L
                                                                               1
004F 22               65                            RET
                      66                            
                      67    ; Define commands to initialize LCD display
                      68    ; 01H: Clear display
                      69    ; 38H: 8-bit, 2 line, 5x7 dots
                      70    ; 0EH: Display ON cursor, ON
                      71    ; 06H: Auto increment mode, i.e., when we send char, cursor position moves right
0050 01380E06         72    INIT_CMND:      DB              01H,    38H,    0EH     ,       06H,    0
0054 00         
                      73            
                      74    ; Define data to display on lines 1 and 2 of LCD
0055 48454C4C         75    MY_DATA1:       DB              'HELLO',        0
0059 4F00       
005B 574F524C         76    MY_DATA2:       DB              'WORLD',        0
005F 4400       
                      77            
                      78    ; Define command to go to line 1 of display
                      79    ; 80H:  Bring cursor to line 1
0061 8000             80    LINE1:                  DB              80H,    0
                      81            
                      82    ; Define command to go to line 2 of display
                      83    ; 0C0H: Bring cursor to line 2
0063 C000             84    LINE2:                  DB              0C0H,   0 
                      85    
                      86    
                      87    END

VERSION 1.2k ASSEMBLY COMPLETE, 0 ERRORS FOUND
MAIN                                                                                                          PAGE 3

D1 . . . . . . . . . . . . . . .  C ADDR  001DH  
D2 . . . . . . . . . . . . . . .  C ADDR  0020H  
D7 . . . . . . . . . . . . . . .    NUMB  00A7H  NOT USED  
DATA_PORT. . . . . . . . . . . .    NUMB  00A0H  
DELAY. . . . . . . . . . . . . .  C ADDR  0047H  
EN . . . . . . . . . . . . . . .    NUMB  0082H  
INIT_CMND. . . . . . . . . . . .  C ADDR  0050H  
L1 . . . . . . . . . . . . . . .  C ADDR  004BH  
L2 . . . . . . . . . . . . . . .  C ADDR  0049H  
LINE1. . . . . . . . . . . . . .  C ADDR  0061H  
LINE2. . . . . . . . . . . . . .  C ADDR  0063H  
MAIN . . . . . . . . . . . . . .  C ADDR  0000H  
MY_DATA1 . . . . . . . . . . . .  C ADDR  0055H  
MY_DATA2 . . . . . . . . . . . .  C ADDR  005BH  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
RS . . . . . . . . . . . . . . .    NUMB  0080H  
RW . . . . . . . . . . . . . . .    NUMB  0081H  
SEND_DATA1 . . . . . . . . . . .  C ADDR  0007H  NOT USED  
SEND_DATA2 . . . . . . . . . . .  C ADDR  0011H  NOT USED  
WRT_CMND . . . . . . . . . . . .  C ADDR  0029H  
WRT_DATA . . . . . . . . . . . .  C ADDR  0038H  
